version: "3.8"
networks:
  example-microservices:
    driver: bridge
services:

  db:
    extends:
      file: ./common/common-services.yaml
      service: db
    volumes:
     - "db:/var/lib/mysql"
    networks:
      - example-microservices

  redis-cache:
    extends:
      file: ./common/common-services.yaml
      service: redis-cache
    volumes:
     - "redis_data:/data"
    networks:
      - example-microservices

  redis-commander:
    extends:
      file: ./common/common-services.yaml
      service: redis-commander
    networks:
      - example-microservices
  
  authentication:
    build:
      context: ./authentication
      dockerfile: authentication.dockerfile
    image: authentication
    container_name: authentication
    ports:
      - "4001:4001"
    platform: linux/x86_64
    env_file: ./authentication/.env.prod
    depends_on:
      - db
    networks:
      - example-microservices

  feed:
    build:
      context: ./feed
      dockerfile: feed.dockerfile
    image: feed
    container_name: feed
    ports:
      - "4002:4002"
    env_file: ./feed/.env.prod
    platform: linux/x86_64
    depends_on:
      - db
      - authentication
    networks:
      - example-microservices

  ui:
    build:
      context: ./ui
      dockerfile: ui.dockerfile
    image: ui
    container_name: ui
    ports:
      - "4003:4003"
    environment:
      NODE_ENV: production
      PORT: 4003
      AUTHENTICATION_UI: "authentication@http://localhost:4001/static/remoteEntry.js"
      FEED_UI: "feed@http://localhost:4002/static/remoteEntry.js"
    platform: linux/x86_64
    depends_on:
      - authentication
      - feed
    networks:
      - example-microservices
  
  api-gateway:
    extends:
      file: ./common/common-services.yaml
      service: api-gateway
    networks:
      - example-microservices
        
volumes:
  redis_data:
  db:
    driver:
      local