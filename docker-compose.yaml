version: "3.8"
networks:
  example-microservices:
    driver: bridge
services:

  db:
    extends:
      file: ./common/common-services.yaml
      service: db
    volumes:
     - "db:/var/lib/mysql"
    networks:
      - example-microservices

  authentication:
    build:
      context: ./authentication
      dockerfile: authentication.dockerfile
    image: authentication
    container_name: authentication
    ports:
      - "4001:4001"
    volumes:
      - ./authentication:/app
    env_file: ./authentication/.env
    depends_on:
      - db
    networks:
      - example-microservices

  feed:
    build:
      context: ./feed
      dockerfile: feed.dockerfile
    image: feed
    container_name: feed
    ports:
      - "4002:4002"
    volumes:
      - ./feed:/usr/src/feed
    env_file: ./feed/.env
    depends_on:
      - db
    networks:
      - example-microservices

  ui:
    build:
      context: ./ui
      dockerfile: ui.dockerfile
    image: ui
    container_name: ui
    ports:
      - "4003:4003"
    volumes:
      - ./ui:/usr/src/app
    env_file: ./ui/.env
    depends_on:
      - authentication
      - feed
    networks:
      - example-microservices
  # db:
  #   platform: linux/x86_64
  #   image: mysql:8.0
  #   ulimits:
  #     nofile:
  #       soft: 20000
  #       hard: 40000
  #   restart: always
  #   environment:
  #     MYSQL_ROOT_PASSWORD: 123456
  #     MYSQL_DATABASE: authentication
  #     MYSQL_USER: user123456
  #     MYSQL_PASSWORD: 123456
  #     MYSQL_ROOT_HOST: '%'
  #   volumes:
  #     - "db:/var/lib/mysql"
  #   command: --default-authentication-plugin=mysql_native_password
  #   ports:
  #     - "3306:3306"
  #   networks:
  #     - example-microservices

  # rabbitmq:
  #   image: rabbitmq:3.9.28-management-alpine
  #   container_name: rabbitmq
  #   ports:
  #       - 5672:5672
  #       - 15672:15672
  #   environment:
  #     - RABBITMQ_DEFAULT_USER=root
  #     - RABBITMQ_DEFAULT_PASS=123456
  #   networks:
  #     - example-microservices

  # redis-commander:
  #   container_name: redis-commander
  #   hostname: redis-commander
  #   image: ghcr.io/joeferner/redis-commander:latest
  #   build: .
  #   environment:
  #     - REDIS_HOSTS=local:autocrade-redis:6379
  #   ports:
  #     - "8081:8081"
  #   networks:
  #     - autocrade

  api-gateway:
    extends:
      file: ./common/common-services.yaml
      service: api-gateway
    networks:
      - example-microservices
        
volumes:
  redis_data:
  db:
    driver:
      local