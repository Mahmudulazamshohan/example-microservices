

const path = require('path');
const HtmlWebPackPlugin = require("html-webpack-plugin");
const deps = require("./package.json").dependencies;
const { ModuleFederationPlugin } = require('webpack').container;

export default {
    entry: './index.tsx',
    context: path.join(__dirname, './src'),
    mode: process.env.NODE_ENV === 'production' ? 'production' : 'development',
    stats: {
        all: false,
        warnings: true,
        errors: true,
        errorDetails: true,
        colors: true,
        chunks: true,
    },
    devServer: {
        // compress: true,
        port: 4003,
        // host: '0.0.0.0',
        // allowedHosts: 'all',
        headers: {
            'Access-Control-Allow-Origin': '*',
            'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, PATCH, OPTIONS',
            'Access-Control-Allow-Headers': 'X-Requested-With, content-type, Authorization',
        },
        // static: {
        //     directory: path.join(__dirname, 'dist'),
        // },
        open: false,
        client: {
          overlay: false,
        },
    },
    output: {
        publicPath: 'http://localhost:4003/',
    },
    resolve: {
        extensions: ['.ts', '.tsx', '.js', ".json"],
    },

    module: {
        rules: [
            {
                test: /\.tsx?$/,
                use: 'ts-loader',
                exclude: /node_modules/,
            },
            {
                test: /\.css$/i,
                use: ['style-loader', 'css-loader'],
            },
        ],
    },
    plugins: [
        new ModuleFederationPlugin({
            name: 'ui',
            filename: "remoteEntry.js",
            remotes: {
                // ui: "ui@http://localhost:4003/remoteEntry.js",
            },
            exposes: {
                "./Header": "./components/Header.tsx",
            },
            shared: {
                ...deps,
                react: {
                    singleton: true,
                    requiredVersion: deps.react,
                },
                "react-dom": {
                    singleton: true,
                    requiredVersion: deps["react-dom"],
                },
                "@emotion/react": {
                    singleton: true,
                    requiredVersion: deps["@emotion/react"],
                },
                "@emotion/styled": {
                    singleton: true,
                    requiredVersion: deps["@emotion/styled"]
                },
            },
        }),
        new HtmlWebPackPlugin({
            template: path.join(__dirname, "./public/index.html"),
        }),
    ]
};
