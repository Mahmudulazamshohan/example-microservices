version: "3.8"

services:
  api-gateway:
    build:
      context: ./nginx
      dockerfile: nginx.dockerfile
    image: api-gateway
    container_name: api-gateway
    ports:
      - "8080:8080"
    depends_on:
      - authentication
      - feed
    networks:
      - example-microservices

  db:
    platform: linux/x86_64
    image: mysql:8.0
    ulimits:
      nofile:
        soft: 20000
        hard: 40000
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: authentication
      MYSQL_USER: user123456
      MYSQL_PASSWORD: 123456
      MYSQL_ROOT_HOST: '%'
    volumes:
      - "db:/var/lib/mysql"
    command: --default-authentication-plugin=mysql_native_password
    ports:
      - "3306:3306"
    networks:
      - example-microservices

  rabbitmq:
    image: rabbitmq:3.9.28-management-alpine
    container_name: rabbitmq
    ports:
        - 5672:5672
        - 15672:15672
    environment:
      - RABBITMQ_DEFAULT_USER=root
      - RABBITMQ_DEFAULT_PASS=123456
    networks:
      - example-microservices

  redis-cache:
    image: "redis:alpine"
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - example-microservices

  redis-commander:
    container_name: redis-commander
    hostname: redis-commander
    image: ghcr.io/joeferner/redis-commander:latest
    build: .
    environment:
      - REDIS_HOSTS=local:redis-cache:6379
    ports:
      - "8081:8081"
    networks:
      - example-microservices

volumes:
  db:
    driver:
      local
  redis_data: